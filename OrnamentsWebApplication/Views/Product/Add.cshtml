
@model OrnamentsWebApplication.ViewModel.ProductViewModel



<section class="container">
    <form method="post">
        <h2 class="text-center">Create</h2>
        <div class="form-group">
            <label for="exampleInputEmail1">Product</label>
            <input type="text" name="Name" class="form-control col-md-6" placeholder="Enter the product name">
        </div>

        <div class="form-group">
            <label for="exampleInputEmail1">Category</label>
            @Html.DropDownListFor(c => c.CategoryId, Model.CategorySelectListItems, "--Select--", new { @class = "form-control col-md-6 dropdown" })
        </div>

        <div class="form-group">
            <label>Price</label>
            <input type="text" name="Price" class="form-control col-md-6" placeholder="Enter the product price">
        </div>
        <div class="form-group">
            <label>Upload Image</label>
            <input id="ImageURL" name="ImageURL" type="hidden" />
            <input id="imageUpload" type="file" name="Image" accept=".png,.jpg,.jpeg" class="form-control col-md-6">
            <div class="thumb">

                <img id="productImage" style="margin-top: 10px">
            </div>
        </div>
        <div class="form-group">
            <label>Description</label>
            <input type="text" name="Description" class="form-control col-md-6" placeholder="Enter description of the product">
            @if (ViewBag.message != null)
            {
                <h4 class="text-primary"> @ViewBag.message</h4>
            }
        </div>

        <button type="submit" class="button">Submit</button>
    </form>
    <br />
    <br />
    @{
        Html.RenderPartial("~/Views/Shared/Product/_ProductDetails.cshtml", Model);
    }
    
    @*<div id="tableContiner">
        @{
            Html.RenderAction("ShowAllProduct");
        }
    </div>*@
   
   

</section>

<script>
    $("#imageUpload").change(function () {
        var element = this;

        var formData = new FormData();

        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax({
                type: 'POST',
                url: '/Shared/ProductUploadImage',
                dataType: 'json',
                data: formData,
                contentType: false,
                processData: false
            })
            
            .done(function(response) {
                console.log(response);
          
                if (response.Success) {
                    $("#ImageURL").val(response.ImageURL);
                    $("#productImage").attr("src", response.ImageURL);
                }
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });
</script>

<script>

    var products = [];
    $(".AddtoCart").click(function () {

        var productID = $(this).attr('data-id');

        products.push(productID);
        $.cookie('CartProducts', products.join('-'), {path:'/'});

        alert("Product added to cart");
    });
</script>

@*<script>
    $(".deleteBtn").click(function () {

        swal({
                title: "Confirm?",
                text: "Are you sure you want to delete this product?",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                            type: 'Get',
                            url: '@Url.Action("Delete", "Product")',
                            data: {
                                ID: $(this).attr('data-id')
                            }
                        })
                        .done(function (response) {
                            $("#tableContainer").html(response);

                            swal("Record deleted Successfully.", {
                                icon: "success",
                               
                            });
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("FAIL");
                        });

                }
            });

        //var confirmDelete = confirm("Are you sure you want to delete this product?");

        //if (confirmDelete)
        //{
        //	$.ajax({
        //		type: 'POST',
        //		url: '/Product/Delete',
        //		data: {
        //			ID: $(this).attr('data-id')
        //		}
        //	})
        //	.done(function (response) {
        //		$("#tableContiner").html(response);
        //	})
        //	.fail(function (XMLHttpRequest, textStatus, errorThrown) {
        //		alert("FAIL");
        //	});
        //}
    });

</script>*@